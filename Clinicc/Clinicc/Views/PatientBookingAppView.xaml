<UserControl x:Class="Clinicc.Views.PatientBookingAppView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Clinicc.Views"
             mc:Ignorable="d" 
     d:DesignHeight="470" d:DesignWidth="700" FontSize="14" Foreground="#1E2527"
            FontFamily="Segoe UI Light"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#2C3639" Offset="0.0"/>
                <GradientStop Color="#2C3639" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#2C3639"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#2C3639"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#2C3639"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#2C3639"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#2C3639"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="#2C3639"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="#2C3639"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="#161b1c"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="#161b1c"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#161b1c"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="#161b1c"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#161b1c"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="#161b1c"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#161b1c"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        
        
        <Style x:Key="DatePickerStyle1" TargetType="{x:Type DatePicker}">
            <Setter Property="Foreground" Value="#DCD7C9"/>
            <Setter Property="IsTodayHighlighted" Value="True"/>
            <Setter Property="SelectedDateFormat" Value="Short"/>
            <Setter Property="Background" Value="#2C3639"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="BorderBrush" Value="#FFACACAC"/>            
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="PART_DisabledVisual" To="1" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.Resources>
                                    <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>                                   
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="PART_Button" Grid.Column="1" 
                                        Focusable="False" HorizontalAlignment="Left" Margin="3,0,3,0" Grid.Row="0"  
                                        VerticalAlignment="Top" Width="20" BorderBrush="Transparent">
                                    <Image Source="/Images/calendar.png"/>
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="TextElement.Foreground" Value="#E7F6F2"/>
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#232b2d"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Template>
                                        <ControlTemplate TargetType="Button">
                                            <Border BorderBrush="#161b1c"
                                                    Padding="2"
                                                    Background="{TemplateBinding Background}">  
                                                <ContentPresenter VerticalAlignment="Center" 
                                                                   HorizontalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Focusable="{TemplateBinding Focusable}" 
                                                   HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Stretch"
                                                   BorderBrush="Transparent" Background="{TemplateBinding Background}">
                                   
                                </DatePickerTextBox>
                                <Grid x:Name="PART_DisabledVisual" Grid.Column="0" Grid.ColumnSpan="2" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom"
                                           PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                                </Grid>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                                <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Background="#2C3639">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>

        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="Auto" MinHeight="30"/>
            <RowDefinition/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>

        <!--menu-->
        <Grid x:Name="MainMenu" Grid.Row="1" Grid.Column="1" Height="28" 
              VerticalAlignment="Center">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Content="About" x:Name="AboutBtn"
                    Grid.Column="0"
                    FontSize="16" 
                    Margin="0,0,10,0"                    
                    BorderBrush="#1f1919">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#3F4E4F"/>
                        <Setter Property="TextElement.Foreground" Value="#E7F6F2"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#161b1c "/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="15" 
                                BorderThickness="2" 
                                BorderBrush="#161b1c"
                                Padding="2"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" 
                                              HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button Content="Help" x:Name="HelpBtn"
                    Grid.Column="1"
                    FontSize="16"  
                    Margin="10,0,10,0"
                    BorderThickness="0" Cursor="Hand">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#3F4E4F"/>
                        <Setter Property="TextElement.Foreground" Value="#E7F6F2"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#161b1c "/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="15" 
                                BorderThickness="2" 
                                BorderBrush="#161b1c"
                                Padding="2"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" 
                                              HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </Grid>
        <!--logo-->
        <Image Grid.Row="1" Grid.Column="3" Source="/Images/care_light.png" />        
        <!--view-->
        <Grid x:Name="PatientHomepageView" 
          Grid.Row="2" Grid.ColumnSpan="5" 
          Background="#3F4E4F">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="3.3*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="4*"/>
            </Grid.RowDefinitions>            
            <!--project name-->
            <Grid Grid.Row="0" Grid.Column="0" Background="#A27B5C">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition  Width="auto"/>
                </Grid.ColumnDefinitions>
                <Image Source="/Images/care_dark.png"
                   VerticalAlignment="Center" HorizontalAlignment="Center" 
                   Height="36" Width="36" Margin="5,0,0,0"/>
                <TextBlock Grid.Row="0" Grid.Column="1" 
                       VerticalAlignment="Center" HorizontalAlignment="Left"
                       Margin="5" Foreground="#1E2527" FontSize="26" >
            Clinicc
                </TextBlock>
            </Grid>
            <!--menu-->
            <StackPanel x:Name="OptionsBarPM" Grid.Row="1" Background="#A27B5C">
                
                <Label Foreground="#1E2527" FontSize="10" Opacity="20"  Margin="5,0,0,0">
                    ACCOUNT
                </Label>
                <Separator Background="#1E2527"/>

                <Button Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"                
                    x:Name="AccountOverviewBtn" 
                    Command="{Binding OverviewPatientCommand}"
                    Content="Overview"
                    FontSize="15" Cursor="Hand"
                    Margin="5,0,0,0">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="#A27B5C"/>
                            <Setter Property="TextElement.Foreground" Value="#1E2527"/>
                            <Setter Property="TextElement.FontFamily" Value="Segoe UI"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#81624a "/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" Height="30">
                                <ContentPresenter VerticalAlignment="Center" 
                                              HorizontalAlignment="Left"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"                
                    x:Name="RecentActivityBtn"  
                     Command="{Binding RecentActivityCommand}"
                    Content="Recent Activity"
                    FontSize="15" Cursor="Hand"
                    Margin="5,0,0,0">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="#A27B5C"/>
                            <Setter Property="TextElement.Foreground" Value="#1E2527"/>
                            <Setter Property="TextElement.FontFamily" Value="Segoe UI"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#81624a "/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" Height="30">
                                <ContentPresenter VerticalAlignment="Center" 
                                              HorizontalAlignment="Left"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <Label Foreground="#1E2527" FontSize="10" Opacity="20" Margin="5,0,0,0">
                    APPOINTMENTS
                </Label>
                <Separator Background="#1E2527"/>

                <Button x:Name="BookAppointmentBtn"                 
                    Command="{Binding BookAppPatientCommand }"    
                    Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                    Content="Book an appointment"
                    FontSize="15" Cursor="Hand"
                    Margin="5,0,0,0">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="#A27B5C"/>
                            <Setter Property="TextElement.Foreground" Value="#1E2527"/>
                            <Setter Property="TextElement.FontFamily" Value="Segoe UI"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#81624a "/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" Height="30">
                                <ContentPresenter VerticalAlignment="Center" 
                                              HorizontalAlignment="Left"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button x:Name="PatientMyAppointmentsBtn"                
                    Command="{Binding PatAppointmentsCommand}"
                    Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                    Content="My appointments"
                    FontSize="15" Cursor="Hand"
                    Margin="5,0,0,0" >
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="#A27B5C"/>
                            <Setter Property="TextElement.Foreground" Value="#1E2527"/>
                            <Setter Property="TextElement.FontFamily" Value="Segoe UI"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#81624a "/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" Height="30">
                                <ContentPresenter VerticalAlignment="Center" 
                                              HorizontalAlignment="Left"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button x:Name="PatientMyPrescriptionsBtn" 
                    Command="{Binding PatPrescriptionsCommand}"
                    Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                    Content="My prescriptions"
                    FontSize="15" Cursor="Hand"
                    Margin="5,0,0,0">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="#A27B5C"/>
                            <Setter Property="TextElement.Foreground" Value="#1E2527"/>
                            <Setter Property="TextElement.FontFamily" Value="Segoe UI"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#81624a "/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" Height="30">
                                <ContentPresenter VerticalAlignment="Center" 
                                              HorizontalAlignment="Left"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </StackPanel>
            <!--logout btn-->
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Button Grid.Row="0" Grid.Column="1"               
                    x:Name="LogOutBtn" 
                    Command="{Binding LogOutHPCommand}"
                    Content="Log Out"
                    FontSize="15" Cursor="Hand"
                    Margin="5">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="#A27B5C"/>
                            <Setter Property="TextElement.Foreground" Value="#1E2527"/>
                            <Setter Property="TextElement.FontFamily" Value="Segoe UI"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#81624a "/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" Height="30"
                                CornerRadius="15" Width="80">
                                <ContentPresenter VerticalAlignment="Center" 
                                              HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>                
            </Grid>
            <!--booking appointment-->
            
            <Grid Grid.Row="1"
                  Grid.Column="1"
                  Margin="30,10,30,20">
                <Grid.ColumnDefinitions>                    
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>                    
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>                    
                </Grid.RowDefinitions>
                
                <!--choosing specialization-->
                
                <TextBlock    Grid.Row="0"
                                Grid.Column="0"                        
                                VerticalAlignment="Center" 
                                HorizontalAlignment="Right"                             
                                Foreground="#DCD7C9" 
                                Text="Choose speacialization:"
                                Margin="0,10,5,10"
                                Panel.ZIndex="1"/>
               
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"
                              Stroke="#61787a"
                              Fill="#61787a"                              
                              Stretch="Fill"
                              Panel.ZIndex="-1"
                              Margin="5"
                              RadiusX="10"
                              RadiusY="10"/>
                
                <ComboBox Grid.Row="0"
                              Grid.Column="1"
                              Grid.ColumnSpan="2"
                              Style="{DynamicResource ComboBoxStyle1}" 
                              x:Name="BookingSpecialization"
                              VerticalAlignment="Center"   
                              HorizontalAlignment="Stretch"                             
                              Foreground="#DCD7C9"
                              Margin="0,10,20,10"
                              
                              ItemsSource="{Binding Path=Specs}"
                              SelectedItem="{Binding Path=ChosenSpec,Mode=TwoWay}" >
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding name}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.ItemContainerStyle>
                        <Style  TargetType="ComboBoxItem">
                            <Setter Property="Background" Value="#2C3639"/>
                            <Setter Property="BorderBrush" Value="#2C3639"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ComboBoxItem">
                                        <Border x:Name="Bdcombobox" Background="#2C3639">
                                            <ContentPresenter HorizontalAlignment="Center"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Bdcombobox" 
                                                            Property="Background"
                                                            Value="#161b1c"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                    <ComboBox.Resources>
                        <Style TargetType="Popup">
                            <Setter Property="Width" 
                                Value="{Binding RelativeSource={RelativeSource FindAncestor,
                                    AncestorType=ComboBox}, Path=ActualWidth}"/>
                        </Style>
                    </ComboBox.Resources>
                </ComboBox>                
                
                <!--choosing doctor-->
                <TextBlock  Grid.Row="1"
                              Grid.Column="0"
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Right"                             
                              Foreground="#DCD7C9" 
                              Text="Pick a doctor:"
                              Margin="0,10,5,10"/>
                
                <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
                              Stroke="#61787a"
                              Fill="#61787a"                              
                              Stretch="Fill"
                              Panel.ZIndex="-1"
                              Margin="5"
                              RadiusX="10"
                              RadiusY="10"/>

                <ComboBox     Grid.Row="1"
                              Grid.Column="1"                             
                              Style="{DynamicResource ComboBoxStyle1}"
                              x:Name="BookingDoctor"
                              VerticalAlignment="Center"  
                              HorizontalAlignment="Stretch"                             
                              Foreground="#DCD7C9"
                              Margin="5"
                              
                              ItemsSource="{Binding Path=Docs}"
                              SelectedItem="{Binding Path=ChosenDoc, Mode=TwoWay}"
                              IsEnabled="{Binding IsSpecializationSelected}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding surname}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>

                    <ComboBox.ItemContainerStyle>
                        <Style  TargetType="ComboBoxItem">
                            <Setter Property="Background" Value="#2C3639"/>
                            <Setter Property="BorderBrush" Value="#2C3639"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ComboBoxItem">
                                        <Border x:Name="Bdcombobox" Background="#2C3639">
                                            <ContentPresenter HorizontalAlignment="Center"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Bdcombobox" 
                                                            Property="Background"
                                                            Value="#161b1c"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                    <ComboBox.Resources>
                        <Style TargetType="Popup">
                            <Setter Property="Width" 
                                Value="{Binding RelativeSource={RelativeSource FindAncestor,
                                    AncestorType=ComboBox}, Path=ActualWidth}"/>
                        </Style>
                    </ComboBox.Resources>
                </ComboBox>
                
                <Button Content="Any Doctor" x:Name="AnyDoctorBtn"
                        Grid.Column="2" Grid.Row="1"
                        Margin="10,10,20,10"
                        BorderThickness="0" Cursor="Hand"
                        Command="{Binding ChooseAnyDoctorCommand}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="#3F4E4F"/>
                                <Setter Property="TextElement.Foreground" Value="#E7F6F2"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#161b1c "/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="15" 
                                        BorderThickness="2" 
                                        BorderBrush="#161b1c"
                                        Padding="2"
                                        Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" 
                                                          HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <!--choosing date-->
                <TextBlock  Grid.Row="2"
                              Grid.Column="0"
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Right"                             
                              Foreground="#DCD7C9" 
                              Text="Choose a date:"
                              Margin="0,10,5,10"/>
                
                <Rectangle Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3"
                              Stroke="#61787a"
                              Fill="#61787a"                              
                              Stretch="Fill"
                              Panel.ZIndex="-1"
                              Margin="5"
                              RadiusX="10"
                              RadiusY="10"/>

                <DatePicker Style="{DynamicResource DatePickerStyle1}" Grid.Row="2" Grid.Column="1" 
                            VerticalAlignment="Center" HorizontalAlignment="Stretch"
                            
                            DisplayDateStart="{Binding StartDate}"
                            DisplayDateEnd="{Binding EndDate}"                            
                            SelectedDate="{Binding SelectedDate,UpdateSourceTrigger=PropertyChanged}">
                    
                </DatePicker>
                
                <Button x:Name="EarliestAppBtn"
                        Grid.Column="2" Grid.Row="2"
                        Margin="10,10,20,10"
                        BorderThickness="0" Cursor="Hand"
                        Command="{Binding EarliestAppointmentCommand}">
                    <TextBlock Text="Earliest appointment available" TextWrapping="Wrap"
                               FontSize="10" HorizontalAlignment="Center"/>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="#3F4E4F"/>
                            <Setter Property="TextElement.Foreground" Value="#E7F6F2"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#161b1c "/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="15" 
                                        BorderThickness="2" 
                                        BorderBrush="#161b1c"
                                        Padding="2"
                                        Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" 
                                                          HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                
                <!--choosing time-->
                <TextBlock    Grid.Row="3"
                              Grid.Column="0"
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Right"                             
                              Foreground="#DCD7C9" 
                              Text="Choose time:"
                              Margin="0,10,5,10"/>

                <Rectangle    Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3"
                              Stroke="#61787a"
                              Fill="#61787a"                              
                              Stretch="Fill"
                              Panel.ZIndex="-1"
                              Margin="5"
                              RadiusX="10"
                              RadiusY="10"/>

                <ComboBox     Grid.Row="3"
                              Grid.Column="1"                             
                              Style="{DynamicResource ComboBoxStyle1}"
                              x:Name="ChoosingTime"
                              VerticalAlignment="Center"  
                              HorizontalAlignment="Stretch"                             
                              Foreground="#DCD7C9"
                              Margin="5"
                              
                              ItemsSource="{Binding Path=TimeOptions}"
                              SelectedItem="{Binding Path=ChosenTime, Mode=TwoWay}"
                              IsEnabled="{Binding IsDateSelected}">                  

                    <ComboBox.ItemContainerStyle>
                        <Style  TargetType="ComboBoxItem">
                            <Setter Property="Background" Value="#2C3639"/>
                            <Setter Property="BorderBrush" Value="#2C3639"/>                          
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ComboBoxItem">
                                        <Border x:Name="Bdcombobox" Background="#2C3639">
                                            <ContentPresenter HorizontalAlignment="Center"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Bdcombobox" 
                                                            Property="Background"
                                                            Value="#161b1c"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                    <ComboBox.Resources>
                        <Style TargetType="Popup">
                            <Setter Property="Width" 
                                Value="{Binding RelativeSource={RelativeSource FindAncestor,
                                    AncestorType=ComboBox}, Path=ActualWidth}"/>
                        </Style>
                    </ComboBox.Resources>
                </ComboBox>
                <!--border-->
                <Rectangle    Grid.Row="0" Grid.RowSpan="4"
                              Grid.Column="0" Grid.ColumnSpan="3"                              
                              Fill="Transparent"                              
                              Stretch="Fill"
                              Panel.ZIndex="-1"                              
                              RadiusX="10"
                              RadiusY="10"
                              StrokeThickness="2"
                              Stroke="#A27B5C"/>
                <!--issue an appointment-->

                <Button x:Name="IssueAppBtn"
                        Grid.Column="2" 
                        Grid.Row="3" Grid.RowSpan="2"
                        Margin="30,30,40,30"
                        BorderThickness="0" Cursor="Hand"
                        Command="{Binding IssueAnAppointment}"
                        IsEnabled="{Binding CanBook}">
                    <TextBlock Text="Book" TextWrapping="Wrap" 
                               FontSize="20" HorizontalAlignment="Center" />
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="#A27B5C"/>
                            <Setter Property="TextElement.Foreground" Value="#1E2527"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#81624a "/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="15" 
                                        BorderThickness="2" 
                                        BorderBrush="#81624a"
                                        Padding="2"
                                        Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" 
                                                          HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Grid>           

        </Grid>
    </Grid>
</UserControl>
